using Microsoft.Xna.Framework;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace DuskOfTheUniverse
{
    // This is a single node in a node graph.
    class PNode
    {
        // Holds the node's coordinates on the grid and whether it is traversable or not.
        private Point m_coords;
        private bool m_isWalkable;

        // Holds the tile's parent and a boolean to tell if it has been visited.
        private PNode m_parent;
        private bool m_isVisited;

        public Point Coords { get { return m_coords; } }
        public bool IsWalkable { get { return m_isWalkable; } }
        public bool Visited { get { return m_isVisited; } set { m_isVisited = value; } }

        public PNode Parent { get { return m_parent; } set { m_parent = value; } }

        // Node constructor.
        public PNode(int x, int y, int traversable)
        {
            m_coords = new Point(x, y);
            m_isWalkable = !Convert.ToBoolean(traversable);
            m_isVisited = false;
        }
    }

    // Class purely to hold a 2D array of nodes.
    class NodeGraph
    {
        private PNode[,] m_pNodes;

        public PNode[,] PNodes { get { return m_pNodes; } set { m_pNodes = value; } }

        // Construct the grid of walkable and non-walkable nodes, using the universal map data generated by the path generator.
        public NodeGraph(UniMapData data)
        {
            m_pNodes = new PNode[data.WalkableGrid.GetLength(0), data.WalkableGrid.GetLength(1)];

            for (int y = 0; y < data.WalkableGrid.GetLength(1); y++)
            {
                for (int x = 0; x < data.WalkableGrid.GetLength(0); x++)
                {
                    m_pNodes[x, y] = new PNode(x, y, data.WalkableGrid[x, y]);
                }
            }
        }
    }
}
